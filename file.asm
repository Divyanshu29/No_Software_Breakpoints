extern printf
extern exit
	global main
section .bss
	password resb 26

section .data
	fmt_string:    	 db	"[+]The checksum is",0xa,0xa,10
	shellcode:
   			 db	  0xb8,0x04,0x00,0x00,0x00,0xbb,0x01,0x00,0x00,0x00
   			 db       0xb9,0xa1,0x91,0x04,0x08,0xba,0x26,0x00,0x00,0x00
   			 db       0xcd,0x80,0xb8,0x03,0x00,0x00,0x00,0x31,0xdb,0xb9
   			 db       0x88,0x91,0x04,0x08,0xba,0x33,0x00,0x00,0x00,0xcd
   			 db       0x80,0x31,0xc9,0xb8,0x80,0x80,0x04,0x08,0xbb,0x23
  			 db       0x81,0x04,0x08,0xe8,0x5b,0x00,0x00,0x00,0x89,0xca
  			 db       0xb9,0x19,0x00,0x00,0x00,0xb8,0x55,0x91,0x04,0x08
    			 db       0xbb,0x88,0x91,0x04,0x08,0xd1,0xca,0x8a,0x44,0x08
 			 db       0xff,0x8a,0x5c,0x0b,0xff,0x30,0xd8,0x30,0xd0,0x75
   			 db       0x1b,0x49,0x75,0xe3,0xb8,0x04,0x00,0x00,0x00,0xbb
   			 db       0x01,0x00,0x00,0x00,0xb9,0x24,0x91,0x04,0x08,0xba
   			 db       0x26,0x00,0x00,0x00,0xcd,0x80,0xeb,0x16,0xb8,0x04
   			 db       0x00,0x00,0x00,0xbb,0x01,0x00,0x00,0x00,0xb9,0x4a
   			 db       0x91,0x04,0x08,0xba,0x0b,0x00,0x00,0x00,0xcd,0x80
   			 db       0xb8,0x01,0x00,0x00,0x00,0x31,0xdb,0xcd,0x80,0x29
   			 db       0xc3,0x31,0xc9,0x02,0x08,0xc1,0xc1,0x03,0x40,0x4b
   			 db       0x75,0xf7,0xc3
	key_str:	 db		"[+]The password is:",0xa,0xa,10

	key:		 db		0x1e, 0xcd, 0x2a, 0xd5, 0x34, 0x87, 0xfc, 0x78
			 db		0x64, 0x35, 0x9d, 0xec, 0xde, 0x15, 0xac, 0x97
			 db		0x99, 0xaf, 0x96, 0xda, 0x79, 0x26, 0x4f, 0x32
			 db		0xe0

	shellcode_len equ $-shellcode
	key_len equ $-key

section .text
main:
		lea esi, [shellcode]				;load the string shellcode into esi address
		mov ebx, [shellcode_len]			;mov length into ebx
		xor ecx, ecx					;clean up ecx
;------------------------------------------------
;  Calculate Checksum
;------------------------------------------------
	_loop:
		add cl,	[esi]					;
		rol ecx, 0x3					;
		inc esi						;=> Assembly for Checksum function call as in gdb
		dec ebx						;
		jnz _loop					;

		mov edx, ecx					;Store ecx in edx
		push ecx					;
		push fmt_string					;=> Prints vaule of ecx i.e the checksum
		call printf					;
;----------------------------------------------
;Clear up the stack
;-----------------------------------------------
		add esp, 0x8					;Clean stack
		xor esi, esi					;
		xor ebx, ebx					;=> Make them ready for next use
		xor ecx, ecx					;
;----------------------------------------------
; Generate pasword
;----------------------------------------------
		mov ecx, key_len				;put address in ecx
		lea esi, [key]					;load key in esi
	_loop2:
		ror edx, 1					;
		mov al, [esi+ecx*1-0x1]				;
		xor al, dl					;=> Algorithm to get the password with XOR
		mov [password+ecx*1-0x1], al			;
		dec ecx						;
		jnz _loop2					;

		push password					;
		push key_str					;=> prints the password
		call printf					;
		add esp, 0x8
;-----------------------------------------------
;To exit
;----------------------------------------------
		push 1
		call exit
